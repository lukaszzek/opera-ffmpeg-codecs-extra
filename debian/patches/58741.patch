--- a/src/third_party/WebKit/WebCore/editing/Editor.cpp
+++ b/src/third_party/WebKit/WebCore/editing/Editor.cpp
@@ -90,10 +90,14 @@ VisibleSelection Editor::selectionForCom
     Node* target = event->target()->toNode();
     Node* selectionStart = selection.start().node();
     if (target && (!selectionStart || target->shadowAncestorNode() != selectionStart->shadowAncestorNode())) {
+        RefPtr<Range> range;
         if (target->hasTagName(inputTag) && static_cast<HTMLInputElement*>(target)->isTextField())
-            return static_cast<HTMLInputElement*>(target)->selection();
-        if (target->hasTagName(textareaTag))
-            return static_cast<HTMLTextAreaElement*>(target)->selection();
+            range = static_cast<HTMLInputElement*>(target)->selection();
+        else if (target->hasTagName(textareaTag))
+            range = static_cast<HTMLTextAreaElement*>(target)->selection();
+
+        if (range)
+            return VisibleSelection(range.get());
     }
     return selection;
 }
--- a/src/third_party/WebKit/WebCore/html/HTMLFormControlElement.cpp
+++ b/src/third_party/WebKit/WebCore/html/HTMLFormControlElement.cpp
@@ -597,10 +597,10 @@ int HTMLTextFormControlElement::selectio
     return toRenderTextControl(renderer())->selectionEnd();
 }
 
-VisibleSelection HTMLTextFormControlElement::selection() const
+PassRefPtr<Range> HTMLTextFormControlElement::selection() const
 {
     if (!renderer() || !isTextFormControl() || cachedSelectionStart() < 0 || cachedSelectionEnd() < 0)
-        return VisibleSelection();
+        return 0;
     return toRenderTextControl(renderer())->selection(cachedSelectionStart(), cachedSelectionEnd());
 }
 
--- a/src/third_party/WebKit/WebCore/html/HTMLFormControlElement.h
+++ b/src/third_party/WebKit/WebCore/html/HTMLFormControlElement.h
@@ -188,7 +188,7 @@ public:
     void setSelectionEnd(int);
     void select();
     void setSelectionRange(int start, int end);
-    VisibleSelection selection() const;
+    PassRefPtr<Range> selection() const;
 
 protected:
     HTMLTextFormControlElement(const QualifiedName&, Document*, HTMLFormElement*);
--- a/src/third_party/WebKit/WebCore/rendering/RenderTextControl.cpp
+++ b/src/third_party/WebKit/WebCore/rendering/RenderTextControl.cpp
@@ -259,10 +259,12 @@ void RenderTextControl::setSelectionRang
         frame->selection()->setSelection(newSelection);
 }
 
-VisibleSelection RenderTextControl::selection(int start, int end) const
+PassRefPtr<Range> RenderTextControl::selection(int start, int end) const
 {
-    return VisibleSelection(VisiblePosition(m_innerText.get(), start, VP_DEFAULT_AFFINITY),
-                            VisiblePosition(m_innerText.get(), end, VP_DEFAULT_AFFINITY));
+    if (!m_innerText)
+        return 0;
+
+    return Range::create(document(), m_innerText, start, m_innerText, end);
 }
 
 VisiblePosition RenderTextControl::visiblePositionForIndex(int index)
--- a/src/third_party/WebKit/WebCore/rendering/RenderTextControl.h
+++ b/src/third_party/WebKit/WebCore/rendering/RenderTextControl.h
@@ -46,7 +46,7 @@ public:
     void setSelectionEnd(int);
     void select();
     void setSelectionRange(int start, int end);
-    VisibleSelection selection(int start, int end) const;
+    PassRefPtr<Range> selection(int start, int end) const;
 
     virtual void subtreeHasChanged();
     String text();
